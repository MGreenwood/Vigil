services:
  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vigil-backend
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://vigil:vigil@db:5432/vigil?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-this
      - ENVIRONMENT=production
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - vigil-network

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vigil-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - vigil-network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: vigil-db
    environment:
      - POSTGRES_DB=vigil
      - POSTGRES_USER=vigil
      - POSTGRES_PASSWORD=vigil
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - vigil-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: vigil-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - vigil-network

volumes:
  postgres_data:
  redis_data:

networks:
  vigil-network:
    driver: bridge 